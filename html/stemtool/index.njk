{% extends 'base.njk' %}
{% import 'includes/arguments.njk' as arguments %}

{% set pageTitle    = 'Idee: '+idea.title %}
{% set contentClass = 'idea' %}
{% set alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j' , 'k'] %}
{% set paddedVoteCount = ("000" + poll.totalVoteCount).slice(-3) %}
{% set paddedArgumentCount = ("000" + idea.argCount).slice(-3) %}

{% block head %}
	{{ super() }}
	<meta property="og:title" content="{{idea.title}}">
	<meta property="og:type" content="website">
	<meta property="og:description" content="{{idea.summary}}">
	<meta property="og:locale" content="nl_NL">
	<meta property="og:site_name" content="{{SITENAME}}">

	{% if idea.posterImage %}
		<meta property="og:image" content="/image/{{idea.posterImage.key}}">
	{% endif %}
{% endblock %}

{% block page %}
	<div id="summary" class="section-container">
		<div class="col-container">
			<div class="col-9 col-xs-12 col-sm-8">
				<div id="banner">
					<div class="image"
						{% if idea.posterImage %}
							style="background-image: url('/image/{{idea.posterImage.key}}');"
						{% endif %}
					></div>
					<h1 class="overlay-title">
						{{idea.title}}
					</h1>
				</div>

				<p class="side-padding-xs">
					{{idea.summary}}
				</p>
			</div>

			<div class="col-3 controls col-xs-12 col-sm-4 side-padding-xs">
				<span class="widget speechBubble newIdeaBubble">
					1 brug, 6 mogelijke varianten
				</span>

				<a href="#vote" class="box-blue margin-bottom-xs">
					<span class="margin-right-s">
						<span class="number-plate"> {{paddedVoteCount[0]}} </span>
						<span class="number-plate"> {{paddedVoteCount[1]}} </span>
						<span class="number-plate"> {{paddedVoteCount[2]}} </span>
					</span>
						stemmen
				</a>
				<a href="#arguments" class="box-blue">
					<span class="margin-right-s">
						<span class="number-plate"> {{paddedArgumentCount[0]}} </span>
						<span class="number-plate"> {{paddedArgumentCount[1]}} </span>
						<span class="number-plate"> {{paddedArgumentCount[2]}} </span>
					</span>

					argumenten
				</a>
				<br />

				<a href="#arguments" class="box-grey-img scroll-link">
					<img src="/img/stemtool/comments.svg" />
					Lees de reacties
				</a>

				<br />

				<a href="#vote" class="box-grey-img scroll-link">
					<img src="/img/stemtool/vote.svg" />
					Breng jouw stem uit!
				</a>

				<br />

				<a href="http://www.amsterdam.nl" class="box-grey-img" target="_blank">
					<img src="/img/stemtool/info.svg" />
					Lees meer over dit project op amsterdam.nl
				</a>
				<br />
			</div>
		</div>
	</div>


	<section id="designs" class="content-section">
		<div class="section-container side-padding-xs">
			<h2 class="margin-top-0">De varianten</h2>

			<div class="col-container">
				{% for option in poll.options
				%}<div class="col-3 col-sm-6 col-xs-12 margin-bottom-m">
						<div class="concept-card">
							<div
								class="concept-card-image"
								style="background-image: url('img/stemtool/placeholder-concept.jpg');"
							>
								<div class="concept-card-number concept-card-number-{{loop.index}}">
									{{alphabet[loop.index - 1].toUpperCase()}}
								</div>
								<div class="concept-card-title">
									`{{option.title}}`
								</div>
							</div>
							<div>
								<a href="#variant-modal-{{option.order}}"  class="concept-card-link caret-link">
									Lees meer
								</a>
								<a href="#arguments" onClick="argumentsLinkClick('{{option.order}}')" class="concept-card-link caret-link">
									Lees reacties
								</a>
							</div>
						</div>
					</div>{%
				endfor %}
			</div>
	</section>

	<section id="details" class="content-section section-container">
		<div class="col-container">
			<div class="col-9 col-sm-8 col-xs-12">
				<div class="side-padding-xs">
					<h2>Achtergrondinformatie</h2>

					<div class="userContent">
						{{idea.description | safe}}
					</div>

					<h2>Hoe werkt het? (spelregels)</h2>

					<ul class="checkmark-list">
						<li>Zo werk het stemproces: hoe wordt de uitslag bepaald</li>
						<li>Wie mogen er stemmen...</li>
						<li>Hoe werkt het</li>
						<li>Waar kun je terecht met vragen</li>
						<li>Andere spelregels?</li>
						<li>Nader te bepalen samen met projectteam</li>
					</ul>
					<br />

					<a href="https://www.amsterdam.nl" target="black" class="box-grey box-grey-link  margin-hor-xs inline-block">
						Lees meer over dit project op amsterdam.nl
					</a>
				</div>

				<br />
				<br />

					<div id="vote" class="vote-container container-grey container-grey-edges margin-hor-m">

						<div class="vote-inner-container">
							{% if can('poll:vote') %}
							<h2 class="h2 margin-hor-s">
								Mijn reactie op de varianten
							</h2>

							<hr class="hr-white margin-hor-m"></hr>

							<form id="vote-form" method="POST" action="/vote" class="">
									<input type="hidden" name="_csrf" value="{{csrfToken}}">
									<input type="hidden" name="pollId" value="{{poll.id}}">

									<label class="h3 block margin-bottom-s margin-top-0">
										Ik verdeel mijn sterren:
									</label>

									<div class="label-container">
										{% for option in poll.options %}
											<input id="checkbox-choice-{{option.id}}" type="checkbox" name="choices[]" value="{{option.id}}" class="checkbox-choice">
											<!-- {{option.order}} ({{option.voteCount}}) !-->

											<label for="checkbox-choice-{{option.id}}" class="concept-label">
												<div class="label-error">
													Je hebt al 3 sterren verdeeld. Klik nogmaals op een ster om
													hem te verwijderen. Hierna kun je een ster aan een andere variant geven.
												</div>
												<div class="relative">
													<div
														class="concept-card-image"
														style="background-image: url('img/stemtool/placeholder-concept.jpg');"
													>
														<div class="concept-card-number concept-card-number-{{loop.index}}">
															{{alphabet[loop.index - 1].toUpperCase()}}
														</div>
													</div>

													<div class="concept-card-title">
													 	{{option.title}}
													</div>
												</div>

											</label>
										{% endfor %}
									</div>

									<!--
									<div class="margin-hor-m">
										<label class="h3 block margin-hor-xs"> Naam: <span class="required-text">(verplicht)</span></label>
										<input type="text" name="fullName" class="input-field">
									</div>
									!-->

									<div  class="margin-hor-m">
										<div class="form-field-container validate-postcode">
											<label class="h3 block margin-hor-xs">
													Mijn postcode:
											</label>
											<div class="label-error">
													Een geldige postcode is vereist.
											</div>
											<input type="text" name="zipCode" class="input-field" placeholder="Bijv. 1234AB">
										</div>
									</div>

									<div class="less-then-stars-message label-error">
										Je hebt minder dan 3 sterren verdeeld, weet je het zeker?
									</div>

									<div class="no-stars-error-message label-error">
										Je hebt nog geen sterren verdeeld.
									</div>

									<br />

									<button type="submit" class="default btn btn-primary">
										<span class="main-submit">
											Verstuur
										</span>
										<span class="confirm-submit">
											Ja, verstuur
										</span>
									</button>

								</form>
								{% else %}
								<label class="h3 block margin-bottom-s margin-top-0">
									Zo heb ik mijn sterren verdeeld:
								</label>


								{% for vote in poll.userVotes %}
									{% for option in poll.options %}

										{% if option.id === vote.pollOptionId %}
										<label for="checkbox-choice-{{option.id}}" class="concept-label selected">
											<div class="relative">
												<div
													class="concept-card-image"
													style="background-image: url('img/stemtool/placeholder-concept.jpg');"
												>
													<div class="concept-card-number concept-card-number-{{loop.index}}">
														{{alphabet[loop.index - 1].toUpperCase()}}
													</div>
												</div>

												<div class="concept-card-title">
													{{option.title}}
												</div>
											</div>
										</label>
										{% endif %}
									{% endfor %}
								{% endfor %}


								<div  class="margin-hor-m">
									<div class="form-field-container validate-postcode">
										<label class="h3 block margin-hor-xs">
												Mijn postcode:
										</label>

										<input type="text" name="zipCode" class="input-field" value="1043BV" placeholder="Bijv. 1234AB" disabled>
									</div>
								</div>

								<hr class="hr-white margin-hor-m"></hr>

								<div class="col-container">
									<div class="col-2">
										<img src="/img/stemtool/check-green.svg" />
									</div>
									<div class="col-10">
										Je sterren zijn goed ontvangen. We zijn ook erg benieuwd
										naar waarom je de sterren zo hebt verdeeld.
										Onderaan kun je <b> argumenten </b> voor en tegen de varianten
										plaatsen.
										<br />
										<br />

										<a href="#arguments" class="box-grey box-grey-link  margin-hor-xs inline-block">
											Naar argumenten
										</a>
									</div>
								</div>

							{% endif %}
							</div>

						</div>



		</div>
		<div class="col-3 col-sm-4 col-xs-12 side-padding-xs">
			<div id="agenda">
				<h2>Proces</h2>

				<div class="agenda">
				{% for item in idea.agenda %}
					<div class="box-grey {{'agenda-period' if item.endDate else 'agenda-day' }}">

						<h3 class="margin-top-0 margin-bottom-xs h3">
							{% if item.endDate %}
								{{item.startDate | date('D MMMM')}} t/m {{item.endDate | date('D MMMM Y')}}
							{% else %}
								{{item.startDate | date('D MMMM Y')}}
							{% endif %}
						</h3>

						<div> {{item.description}} </div>
						{% if item.actionText %}
						<a href="{{item.actionURL}}" class="block caret-link">{{item.actionText}}</a>
						{% endif %}
					</div>
				{% endfor %}
				</div>
			</div>

			{% if can('idea:admin') %}
				<h2>Bewerken</h2>

				<form action="/plan/{{idea.id}}/edit">
					<button type="submit" class="edit">Bewerk idee</button>
				</form>

				<form method="POST" action="/plan/{{idea.id}}/delete" id="deleteIdea">
					<input type="hidden" name="_method" value="DELETE">
					<input type="hidden" name="_csrf" value="{{csrfToken}}">
					<button type="submit" class="delete">Verwijder idee</button>
				</form>

				<h2>Beheren</h2>

				<form method="GET" action="/agenda/edit">
					<button type="submit" class="votes">Bewerk agenda</button>
				</form>

				<form method="GET" action="/plan/{{idea.id}}/votes">
					<button type="submit" class="votes">Stemoverzicht</button>
				</form>
			{% endif %}

			<br />

			<h2>Heb je nog even?</h2>
			<div class="box-grey">
				<h4 class="margin-top-0">
					We hebben nog twee extra vragen
					over wat jij belangrijk vindt
					in de uitwerking van de brug.
					Laat jij je stem horen?
				</h4>
				<p>
					Dit kost hooguit 2 minuten
					van je tijd?
				</p>
				<a href="https://www.amsterdam.nl" target="_blank" class="caret-link">
					Ja, ga naar vragenlijst
				</a>
			</div>


			</div>
		</div>
	</section>

	<section id="arguments" class="margin-bottom-m">
		<div class="bg-sand" style="padding: 1px;">
			<div class="section-container side-padding-xs">
				<h2 class="margin-hor-m">
					Reacties
				</h2>
			</div>
		</div>

		<div class="section-container side-padding-xs">
			{% if can('arg:add') %}
				<div class="arguments-cta-box">

					<div class="col-container">
						<div class="col-2">
							<img class="arguments-icon" src="/img/stemtool/comments.svg" />
						</div>

						<div class="col-10">
							<div class="speech-balloon">
								<h3 class="margin-0">
									Wil je meepraten over de ontwerpen?
									Plaats een argument voor of tegen!
								</h3>
							</div>
						</div>
					</div>

					<br />

					<div class="box-grey">
						<form method="POST" action="/arg/new" class="newArgument clearfix ">
							<div>
								Ik ben

								<span class="select-wrapper">
									<select name="sentiment"  class="select">
										<option value="for">Voor</option>
										<option value="against">Tegen</option>
									</select>
								</span>

								<span class="select-wrapper">
									<select name="label">
									{% for option in poll.options %}
										<option value="{{option.order}}">Ontwerp {{option.order}}</option>
									{% endfor %}
									</select>
								</span>

								want...
							</div>
							<br />

							<textarea
								class="textarea"
								name="description"
								placeholder="Ik ben voor ontwerp A, want..."
							></textarea>
							<br />

							<div>
								Naam: <input type="text" name="nickName" value="{{user.nickName}}" class="input-field">
							</div>
							<br />
							<div class="charsLeft">
								<div class="min">Nog minimaal <span>30</span> tekens.</div>
								<div class="max"><span>360</span> tekens resterend.</div>
							</div>

							<input type="hidden" name="_csrf" value="{{csrfToken}}">
							<button type="submit" class="pull-right btn btn-primary">
								Verzenden
							</button>
						</form>
					</div>
				</div>
			{% endif %}
		</div>

		<div  class="section-container side-padding-xs ">
			<div class="box-grey">
				<div class="col-container">
					<div class="col-4">
						<h3 class="margin-0"> Laat argumenten zien van: </h3>
					</div>

					{% for option in poll.options %}
						<div class="col-2">
							<a id="filter-arguments-option-{{option.order}}" href="#" class="tab-button argument-filter-tab " data-variant="{{option.order}}">
								Variant {{option.order}}
							</a>
						</div>
					{% endfor %}

				</div>

		</div>

		<div class="section-container side-padding-xs">
			<div class="argList for">
				<h3  class="text-center margin-hor-m h2"> Argumenten voor </h3>
				{{arguments.list(user, idea, csrfToken, 'argumentsFor')}}
			</div>
			<div class="argList against">
				<h3 class="text-center margin-hor-m h2"> Argumenten tegen </h3>
				{{arguments.list(user, idea, csrfToken, 'argumentsAgainst')}}
			</div>
		</div>
	</section>


	<!--- Concept popups !-->

	{% for option in poll.options %}
		<div id="variant-modal-{{option.order}}" class="content-modal">
			<div class="content-modal-content">

				<div class="col-container">
					<div class="col-12">
						<h1 class="margin-hor-s">Ontwerp {{option.order}}: {{option.title}}</h1>
						<hr class="margin-hor-m" />
					</div>

					<div class="col-6 col-xs-12">
						<img src="/img/stemtool/placeholder-concept.jpg" style="max-width: 100%" />
					</div>
					<div class="col-6 col-xs-12">
						{{ option.intro | safe }}
					</div>
				</div>

				<div class="margin-hor-s">
					<div class="col-container">
						<div class="col-3 col-xs-6">
							<a href="#arguments" class="btn btn-primary btn--stretch">
								Reageer
							</a>
						</div>
						<div class="col-3 col-xs-6">
							<a href="#vote" class="btn btn-primary btn--stretch">
								Stem
							</a>
						</div>
						<div class="col-5 col-xs-6">
							<a href="https://amsterdam.nl/javabrug" target="_blank" class="btn btn-secondary btn--stretch">
								Lees meer over dit ontwerp
							</a>
						</div>
					</div>
				</div>

				<a href="#designs" class="content-modal-close" >x</a>
			</div>
		</div>
	{% endfor %}


{% endblock %}

{% block scripts %}
	<script src="/js/promise.js"></script>
	<script src="/js/fetch.js"></script>
	<script>
		// Helper for sending non-GET HTTP requests
		// ----------------------------------------
		// Used in progressive enhancement scripts to replace a 'old-school'
		// request with a `fetch`/`XMLHTTPRequest` action.
		(function( global ) {
			var csrfToken = '{{csrfToken}}';

			// Wrapper for fetch to POST/PUT data
			global.send = function( method, url, data ) {
				data._csrf = csrfToken;

				return fetch(url, {
					method      : method,
					headers     : {
						'Content-Type' : 'application/json',
						'Accept'       : 'application/json'
					},
					credentials : 'same-origin',
					body        : data ? JSON.stringify(data): null
				})
				.then(handleResponse)
				.then(function( data ) {
					if( 'csrfToken' in data ) {
						csrfToken = data.csrfToken;
						// HACK?: Update all tokens in static forms as well.
						$('form input[type="hidden"][name="_csrf"]').forEach(function( input ) {
							input.value = csrfToken;
						});
					}
					return data;
				});
			}

			function handleResponse( response ) {
				var json = response.json();
				if( response.status >= 200 && response.status < 300 ) {
					return json;
				} else {
					return json.then(function( data ) {throw data});
				}
			}
		})(this);
	</script>

	{{ arguments.renderLists(user, idea, '#arguments .argList') }}

	<script>
		var lessThenStarsClassName = 'less-then-stars-error';
		var noStarsErrorClassName = 'no-stars-error';

		// New argument form
		// -----------------
		// Character count on 'new argument' forms.
		//
		// HACK: `renderForm` is defined in the scripts coming from
		// `arguments.renderLists()` above.
		$('#arguments form.newArgument').forEach(function( form ) {
			renderForm(form);
		});

		document.getElementById('vote-form').addEventListener('submit', function(ev) {
			var validated = true;
			var form = this;
			var lessThenStars = hasClass(form, lessThenStarsClassName);
			var checkedCount = getGiveVoteCount();
			var maxChecked = 3;

			/* Validate postcode field */
			$('#vote-form .validate-postcode').forEach(function(inputContainer) {
				if(!validatePostcodeFormField(inputContainer) ) {
					validated = false;
				}
			});

			/* Validate postcode field */
			if (checkedCount === 0 ) {
				clearClassesVoteForm();
				form.classList.add(noStarsErrorClassName);
				validated = false;
			} else if (checkedCount < maxChecked && !lessThenStars) {
				clearClassesVoteForm();
				form.classList.add(lessThenStarsClassName);
				validated = false;
			}

			if (!validated) {
				ev.preventDefault();
			}
		});


		$('#vote-form .validate-postcode').forEach(function(inputContainer) {
			inputContainer.addEventListener('keyup', function(ev) {
				validatePostcodeFormField(inputContainer);
			});
		});

		function validatePostcodeFormField(inputContainer){
			var inputEl = inputContainer.querySelector('input');
			if(validatePostcode(inputEl.value)) {
				inputContainer.classList.remove('error');
				return true;
			} else {
				inputContainer.classList.add('error');
				return false;
			}
		}

		$('#vote-form .concept-label').forEach(function( label, i ) {
			label.addEventListener('click', function(ev) {
				var checkedCount = getGiveVoteCount();
				var maxChecked = 3;
				var itsCheckbox = document.getElementById(label.getAttribute('for'));

				/** Add error when clicked on label when already all votes are given. **/
				if (!itsCheckbox.checked && checkedCount >= maxChecked) {
					ev.preventDefault();
					clearVoteErrors();
					label.classList.add('error');
				} else {
					clearVoteErrors();
				}
			})
		});

		$('#vote-form input[type="checkbox"]').forEach(function( checkbox, i ) {
			checkbox.addEventListener('change', function(ev) {
				addUnavailableClass();
				clearClassesVoteForm();
			});
		});

		function getGiveVoteCount () {
			return $('#vote-form input[type="checkbox"]:checked').length;
		}

		function clearVoteErrors () {
			$('#vote-form .concept-label').forEach(function(label) {
				label.classList.remove('error');
			});
		}

		function getVoteForm() {
			return document.getElementById('vote-form');
		}

		function clearClassesVoteForm() {
			getVoteForm().classList.remove(lessThenStarsClassName);
			getVoteForm().classList.remove(noStarsErrorClassName);
		}

		function validatePostcode(postcode) {
			var rege = /^[1-9][0-9]{3} ?(?!sa|sd|ss)[a-z]{2}$/i;
			return rege.test(postcode);
		}

		function argumentsLinkClick(order) {
			document.getElementById('filter-arguments-option-'+order).click();
		}

		function addUnavailableClass () {
			$('#vote-form .concept-label').forEach(function(label) {
				var checkedCount = getGiveVoteCount();
				var maxChecked = 3;
				var itsCheckbox = document.getElementById(label.getAttribute('for'));

				/** Add class for when it's unavailable for voting. **/
				if ((checkedCount ) >= maxChecked && !itsCheckbox.checked) {
					label.classList.add('unavailable');
				} else {
					label.classList.remove('unavailable');
				}
			});
		}

		function hasClass( target, className ) {
			 return new RegExp('(\\s|^)' + className + '(\\s|$)').test(target.className);
		}

	</script>
{% endblock %}
