{% extends 'base.njk' %}
{% import 'includes/arguments.njk' as arguments %}
{% import 'includes/newsletter.njk' as newsletter %}

{% from 'partials/arguments-form.njk' import argumentsForm %}
{% from 'partials/number-plate.njk' import numberPlate %}
{% from 'partials/mobile-menu.njk' import mobileMenu %}
{% from 'partials/variant-modals.njk' import variantModals %}
{% from 'partials/variant-checkboxes.njk' import variantCheckboxes %}
{% from 'partials/variant-given-answers.njk' import variantGivenAnswers %}
{% from 'partials/arguments-filters.njk' import argumentsFilters %}
{% from 'partials/agenda-items.njk' import agendaItems %}
{% from 'partials/form-field-zipcode.njk' import formFieldZipcode %}

{% set pageTitle    = 'Idee: '+idea.title %}
{% set contentClass = 'idea' %}
{% set alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j' , 'k'] %}
{% set paddedVoteCount = ("000" + poll.totalVoteCount).slice(-3) %}
{% set paddedArgumentCount = ("000" + idea.argCount).slice(-3) %}

{% block head %}
	{{ super() }}

	<title>{{SITENAME}}</title>

	<meta property="og:title" content="{{idea.title}}">
	<meta property="og:type" content="website">
	<meta property="og:description" content="{{idea.summary}}">
	<meta property="og:locale" content="nl_NL">
	<meta property="og:site_name" content="{{SITENAME}}">
	<meta property="og:image" content="/img/stemtool/header.png">
	<link  href="//cdnjs.cloudflare.com/ajax/libs/fotorama/4.6.4/fotorama.css" rel="stylesheet"> <!-- 3 KB -->

{% endblock %}

{% block page %}
	<div id="summary" class="section-container">
		<div class="col-container">
			<div class="col-9 col-xs-12 col-sm-8">
				<div id="banner">
					<div class="image" style="background-image: url('/image/{{idea.posterImage.key}}');"></div>
					<h1 class="overlay-title">
						<div class="margin-bottom-xs"> Geef je mening! </div>
						{{idea.title  | safe }}
					</h1>
				</div>

				<p class="side-padding-xs">
					{{idea.summary | safe}}
				</p>
			</div>

			<div class="col-3 controls col-xs-12 col-sm-4 side-padding-xs">
				{% if can('idea:admin') %}
				<a href="/plan/{{idea.id}}/votes" class="votes btn block margin-bottom-sm">
					Sterrenoverzicht
				</a>
				{% endif %}
				<span class="widget speechBubble newIdeaBubble">
					Kies welk ontwerp je het liefst op de muur ziet!
				</span>

				<a href="#vote" class="margin-bottom-xs scroll-link block no-decoration" >
					{{ numberPlate(poll.totalVoteCount, 'stemmen') }}
				</a>

				<a href="#arguments" class="margin-bottom-sm scroll-link block no-decoration">
					{{ numberPlate(idea.argCount, 'reacties') }}
				</a>

				{# <a href="#arguments" class="box-grey-img scroll-link margin-bottom-sm">
					<img src="/img/stemtool/comments.svg" />
					Lees argumenten
				</a> #}

				<a href="#vote" class="box-grey-img scroll-link margin-bottom-sm">
					<img src="/img/stemtool/stars.svg" />
					Stem ook!
				</a>

				<a href="{{GLOBALS.projectPage}}" class="box-grey-img margin-bottom-sm" target="_blank">
					<img src="/img/stemtool/info.svg" />
					Lees meer over dit project op amsterdam.nl
				</a>
				<br />
			</div>
		</div>
	</div>


	<section id="designs" class="content-section">
		<div class="section-container side-padding-xs">
			<div class="mobile-accordion">
				<h2 class="mobile-accordion-opener margin-top-0">De ontwerpen</h2>

				<div class="col-container">
					{% for option in poll.options
					%}<div class="col-3 col-sm-6 col-xs-12 margin-bottom-m">
							<div class="concept-card concept-card-{{loop.index}} clearfix">
								<a
									href="#variant-modal-{{option.order}}"
									class="concept-card-image"
									style="background-image: url('/image/variant_{{option.id}}_klein.jpg');"
								>
									<div class="concept-card-number concept-card-number-{{loop.index}}">
										{{alphabet[loop.index - 1].toUpperCase()}}
									</div>
									<div class="concept-card-title">
										{{option.title}}
									</div>
								</a>
								<div class="concept-action-links">
									<div class="concept-card-title-xs">
										{{option.title}}
									</div>
									<div>
										<a href="#variant-modal-{{option.order}}"  class="concept-card-link caret-link">
											Lees meer
										</a>
										<a href="#arguments" onClick="argumentsLinkClick('{{option.order}}')" class="concept-card-link caret-link scroll-link">
											Lees reacties
										</a>
									</div>
								</div>
							</div>
						</div>{%
					endfor %}
				</div>
			</div>
		</div>
	</section>

	<section id="details" class="content-section section-container ">
		<div class="col-container">
			<div class="col-9 col-sm-8 col-xs-12">
				<div class="side-padding-xs">
					<div class="mobile-accordion">
						<h2 class="mobile-accordion-opener">Achtergrondinformatie</h2>

						<div class="userContent">
							{{idea.description | safe}}
						</div>
					</div>

					<div class="mobile-accordion">
						<h2 class="mobile-accordion-opener">Hoe werkt het?</h2>

						<ul class="checkmark-list">
							<li>Alle bewoners uit stadsdeel West mogen op de ontwerpen stemmen.
							<li>Je kunt op je favoriete ontwerp stemmen door het opgeven van je postcode.
							<li>Het ontwerp met de meeste stemmen zal op de muur worden geschilderd.
							<li>De uitslag wordt op woensdag 20 juni voor 17.00 uur bekend gemaakt op <a href="http://www.amsterdam.nl/kareldoorman" target="_blank">amsterdam.nl/kareldoorman</a>.
							<li>Vragen kunnen via <a href="http://www.mutantes.land/kdp.html" target="_blank">de website van de kunstenaar</a> worden ingediend.
						</ul>

						{# <br />

						<a href="{{GLOBALS.projectPage}}" target="black" class="box-grey box-grey-link  margin-hor-xs inline-block">
							Lees meer over dit project op amsterdam.nl
						</a> #}
					</div>
				</div>

				<br />
				<br />

				<div id="vote" class="vote-container container-grey container-grey-edges margin-hor-m side-padding-xs">
					<div class="vote-inner-container">
					{% if can('poll:vote') %}
						<h2 class="h2 margin-hor-s">
							Stem op jouw favoriete ontwerp
						</h2>

						<hr class="hr-white margin-hor-m"></hr>

						<form id="vote-form" method="POST" action="/vote" class="">
							<input type="hidden" name="_csrf" value="{{csrfToken}}">
							<input type="hidden" name="pollId" value="{{poll.id}}">

							<label class="block margin-bottom-s margin-top-0">
								{# <b class="intro">
									Laat je waardering weten door 3 sterren te verdelen over de mogelijke locatievarianten.
									Klik op de variant of varianten (als je er meer hebt) van jouw voorkeur om deze een ster te geven.
									Klik nogmaals om dat ongedaan te maken.
								</b>
								<br /> #}
								<div class="small">
									Stem hier op het ontwerp dat jij het liefst op de muur ziet.
									Daarnaast vragen we je om je postcode in te vullen, zodat we
									kunnen zien waar de mensen die stemmen vandaan komen.
								</div>
							</label>

							<label class="h3 block margin-bottom-xs margin-top-m">
								Ik stem op:
							</label>

							{{variantCheckboxes(poll.options, alphabet)}}
							<!--
							<div class="margin-hor-m">
								<label class="h3 block margin-hor-xs"> Naam: <span class="required-text">(verplicht)</span></label>
								<input type="text" name="fullName" class="input-field">
							</div>
							!-->

							{% if not user.zipCode %}
								{{formFieldZipcode()}}
							{% endif %}

							<div class="less-then-stars-message label-error">
								Je mag nog meer sterren uitdelen, weet je het zeker?
							</div>

							<div class="no-stars-error-message label-error">
								Je hebt nog geen keuze gemaakt.
							</div>

							<br />

							<button type="submit" class="default btn btn-primary">
								<span class="main-submit">
									Verstuur
								</span>
								<span class="confirm-submit">
									Ja, verstuur
								</span>
							</button>

						</form>
					{% elseif can('poll:result') %}
						<label class="h3 block margin-bottom-s margin-top-0">
							Je hebt gestemd op:
						</label>

						{{variantGivenAnswers(poll.options, poll.userVotes, alphabet)}}

						<div  class="margin-hor-m">
							{{formFieldZipcode(user.zipCode)}}
						</div>

						<hr class="hr-white margin-hor-m"></hr>

						<div class="col-container thank-you-container">
							<div class="col-2">
								<img src="/img/stemtool/check-green.svg" class="icon" />
							</div>
							<div class="col-10">
								<label class="h3 block margin-top-0 margin-bottom-xs">
										Bedankt voor je reactie!
								</label>

								Je stem is goed ontvangen. Onderaan kun je meedoen met het gesprek over de verschillende ontwerpen.
								<br />
								<br />

								<a href="#arguments" class="box-grey box-grey-link  margin-hor-xs inline-block scroll-link">
									Naar reacties
								</a>
							</div>
						</div>
					{% else %}
						<div class="col-container thank-you-container">
							<div class="col-2">
								<img src="/img/stemtool/check-green.svg" class="icon" />
							</div>
							<div class="col-10">
								<label class="h3 block margin-top-0 margin-bottom-xs">
									De stemronde is afgelopen!
								</label>
								
								<p>
									Iedereen die gestemd heeft: van harte bedankt! De stemmen worden nu geteld.
								</p>
								
								<p>
									Onderaan kun je nog de <b>reacties</b> op alle ontwerpen doorlezen.
								</p>
								
								<a href="#arguments" class="box-grey box-grey-link  margin-hor-xs inline-block scroll-link">
									Naar reacties
								</a>
							</div>
						</div>
					{% endif %}
					</div>
				</div>
			</div>

			<div class="col-3 col-sm-4 col-xs-12 side-padding-xs">
				<div id="agenda">
					<h2>Tijdlijn</h2>
					{{ agendaItems(idea.agenda) }}
				</div>

				{# <br />

	      {{newsletter.form(user, csrfToken)}}

				<h2>Heb je nog even?</h2>
				<div class="box-grey">
					<h4 class="margin-top-0">
						We hebben nog twee extra vragen
						over wat jij belangrijk vindt
						in de uitwerking van de brug.
						Laat jij je stem horen?
					</h4>
					<p>
						Dit kost hooguit 2 minuten
						van je tijd.
					</p>
					<a href="https://www.amsterdam.nl/formulieren/bouw/javabrug/praat-mee-javabrug" target="_blank" class="caret-link">
						Ja, ga naar vragenlijst
					</a>
				</div> #}
			</div>
		</div>
	</section>

	<section id="arguments" class="margin-bottom-m">
		<div class="bg-sand" style="padding: 1px;">
			<div class="section-container side-padding-xs">
				<h2 class="margin-hor-m">
					Reacties
				</h2>
			</div>
		</div>

		<div class="content-section section-container">
			<div class="col-9 col-sm-8 col-xs-12">
				{% if can('arg:form') %}
					{{argumentsForm(poll.options, user.nickName, user.zipCode, csrfToken)}}
				{% endif %}
				
				{{ argumentsFilters(poll.options) }}
				
				<div class="argList for">
					{{arguments.list(user, idea, csrfToken, 'argumentsFor')}}
				</div>
			</div>
		</div>
	</section>

	{{ variantModals(poll.options) }}

	{{ mobileMenu() }}

{% endblock %}

{% block scripts %}
	<script src="/js/promise.js"></script>
	<script src="/js/fetch.js"></script>
	<script src="/js/jquery-3.3.1.min.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/fotorama/4.6.4/fotorama.js"></script> <!-- 16 KB -->
	<script src="/js/scroll-link.js"></script>
	<script src="/js/enhancements.js"></script>
	<script src="/js/argument-tabs.js"></script>

	<script>
		$.noConflict();

		// Helper for sending non-GET HTTP requests
		// ----------------------------------------
		// Used in progressive enhancement scripts to replace a 'old-school'
		// request with a `fetch`/`XMLHTTPRequest` action.
		(function( global ) {
			var csrfToken = '{{csrfToken}}';

			// Wrapper for fetch to POST/PUT data
			global.send = function( method, url, data ) {
				data._csrf = csrfToken;

				return fetch(url, {
					method      : method,
					headers     : {
						'Content-Type' : 'application/json',
						'Accept'       : 'application/json'
					},
					credentials : 'same-origin',
					body        : data ? JSON.stringify(data): null
				})
				.then(handleResponse)
				.then(function( data ) {
					if( 'csrfToken' in data ) {
						csrfToken = data.csrfToken;
						// HACK?: Update all tokens in static forms as well.
						$('form input[type="hidden"][name="_csrf"]').forEach(function( input ) {
							input.value = csrfToken;
						});
					}
					return data;
				});
			}

			function handleResponse( response ) {
				var json = response.json();
				if( response.status >= 200 && response.status < 300 ) {
					return json;
				} else {
					return json.then(function( data ) {throw data});
				}
			}
		})(this);
	</script>

	{{ arguments.renderLists(user, idea, '#arguments .argList') }}

	<script>
		(function( global ) {
			var lessThenStarsClassName = 'less-then-stars-error';
			var noStarsErrorClassName  = 'no-stars-error';
			var maxChecked             = 1;

			// Voting form
			// -----------
			var voteForm = document.getElementById('vote-form');
			if( voteForm ) {
				// Validate...
				voteForm.addEventListener('submit', function( event ) {
					var validated     = true;
					var form          = this;
					var lessThenStars = hasClass(form, lessThenStarsClassName);
					var checkedCount  = getGiveVoteCount();
					
					$('#vote-form .validate-postcode').forEach(function( inputContainer ) {
						if( !validatePostcodeFormField(inputContainer) ) {
							validated = false;
						}
					});
					// Respond to voting errors.
					if( checkedCount === 0 ) {
						clearClassesVoteForm();
						form.classList.add(noStarsErrorClassName);
						validated = false;
					} else if( checkedCount < maxChecked && !lessThenStars ) {
						clearClassesVoteForm();
						form.classList.add(lessThenStarsClassName);
						validated = false;
					}

					if( !validated ) {
						event.preventDefault();
					} else {
						setFormSendingToDisabled(form);
					}
				});
				// ... and make voting options interactive.
				$('#vote-form .concept-label').forEach(function( label, i ) {
					var checkBox = document.getElementById(label.getAttribute('for'));
					
					checkBox.addEventListener('change', function( event ) {
						addUnavailableClass();
						clearClassesVoteForm();
					});
					label.addEventListener('click', function( event ) {
						var checkedCount = getGiveVoteCount();
						
						// Respond to voting error.
						if( !checkBox.checked && checkedCount >= maxChecked ) {
							event.preventDefault();
							clearVoteErrors();
							label.classList.add('error');
						} else {
							clearVoteErrors();
						}
					})
				});
			}
			
			// New argument form
			// -----------------
			// - Character count on 'new argument' forms.
			// - Validation.
			//
			// HACK: `renderForm` is defined in the scripts coming from
			// `arguments.renderLists()` above.
			$('#arguments form.newArgument').forEach(function( form ) {
				renderForm(form);
				
				form.addEventListener('submit', function( event ) {
					var validated = true;

					$('.validate-text-required').forEach(function( inputContainer ) {
						if( !validateRequiredTextField(inputContainer) ) {
							validated = false;
						}
					});
					$('#new-argument-form .validate-postcode').forEach(function( inputContainer ) {
						if( !validatePostcodeFormField(inputContainer) ) {
							validated = false;
						}
					});

					if( !validated ) {
						event.preventDefault();
					} else {
						setFormSendingToDisabled(this);
					}
				});
			});
			
			// Field error clearing
			// --------------------
			// Clear the visual field errors when the user has corrected
			// the mistake.
			$('.validate-text-required').forEach(function( inputContainer ) {
				inputContainer.addEventListener('keyup', function() {
					if( hasClass(inputContainer, 'error') ) {
						validateRequiredTextField(inputContainer);
					}
				});
			});
			$('.validate-postcode').forEach(function( inputContainer ) {
				inputContainer.addEventListener('keyup', function() {
					if( hasClass(inputContainer, 'error') ) {
						validatePostcodeFormField(inputContainer);
					}
				});
			});
			
			// Functions called from the HTML
			// ------------------------------
			global.argumentsLinkClick = function( order ) {
				document.getElementById('filter-arguments-option-'+order).click();
			}
			
			// Helper functions
			// ----------------
			
			function validatePostcodeFormField( inputContainer ){
				var inputEl = inputContainer.querySelector('input');
				 if( validatePostcode(inputEl.value) ) {
					 if( hasClass(inputContainer, 'error') ) {
							inputContainer.classList.remove('error');
							inputContainer.classList.add('success');
						}
					return true;
				} else {
					inputContainer.classList.add('error');
					inputContainer.classList.remove('success');
					return false;
				}
			}

			function validatePostcode( postcode ) {
			  var rege = /^[1-9][0-9]{3} ?(?!sa|sd|ss)[a-z]{2}$/i;
			  return rege.test(postcode);
			}

			function validateRequiredTextField( inputContainer ){
				var inputEl = inputContainer.querySelector('input');
				if( inputEl.value.length > 0 ) {
					if( hasClass(inputContainer, 'error') ) {
						inputContainer.classList.remove('error');
						inputContainer.classList.add('success');
					}

					return true;
				} else {
					inputContainer.classList.add('error');
					inputContainer.classList.remove('success');
					return false;
				}
			}

			function getGiveVoteCount() {
				return $('#vote-form input[type="checkbox"]:checked').length;
			}

			function clearVoteErrors() {
				$('#vote-form .concept-label').forEach(function( label ) {
					label.classList.remove('error');
				});
			}

			function getVoteForm() {
				return document.getElementById('vote-form');
			}

			function clearClassesVoteForm() {
				getVoteForm().classList.remove(lessThenStarsClassName);
				getVoteForm().classList.remove(noStarsErrorClassName);
			}

			function addUnavailableClass() {
				$('#vote-form .concept-label').forEach(function( label ) {
					var checkedCount = getGiveVoteCount();
					var itsCheckbox  = document.getElementById(label.getAttribute('for'));

					/** Add class for when it's unavailable for voting. **/
					if( (checkedCount ) >= maxChecked && !itsCheckbox.checked ) {
						label.classList.add('unavailable');
					} else {
						label.classList.remove('unavailable');
					}
				});
			}

			function hasClass( target, className ) {
				return new RegExp('(\\s|^)' + className + '(\\s|$)').test(target.className);
			}
		})(this);
	</script>
{% endblock %}
