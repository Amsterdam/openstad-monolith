<template id="idea-template">
	<idea id="idea-{{idea.id}}">
		<idea-image style="background-image: url({{idea.posterImageUrl}})"></idea-image>
		<idea-controls>
			<idea-votes-for-button id="idea-votes-for-button" onclick="doVote('yes')" class="{{'selected' if idea.userVote and idea.userVote.opinion == 'yes'}}" data-count="{{idea.yes}}"></idea-votes-for-button>
			<idea-votes-against-button id="idea-votes-against-button" onclick="doVote('no')" class="{{'selected' if idea.userVote and idea.userVote.opinion == 'no'}}" data-count="{{idea.no}}"></idea-votes-against-button>
		</idea-controls>
		<idea-title>{{idea.title}}</idea-title>
		<idea-description>{{idea.description | safe}}</idea-description>
		<idea-counters>{{idea.yes}}, {{idea.no}}, {{idea.argCount}}</idea-counters>
	</idea>
</template>

<script>

 // web component definition
 class IdeaWidget extends HTMLElement {

	 constructor() {
		 super();
	 }

	 connectedCallback () {
		 let href = this.getAttribute('href') || '';
		 this.fetch()
		 this.innerHTML = `{% include './idea.njk' %}`
	 }

	 fetch() {
		 let self = this;

		 // TODO: fetch is too modern, so change or polyfill
		 // TODO: CORS
		 let url = '{{apiUrl}}/api/site/2/idea/10?includePosterImage=true&includeVoteCount=true&includeUserVote=true'
		 fetch(url, {
			 method: 'get',
			 headers: {
				 "Accept": "application/json"
			 },
		 })
			 .then(function (response) {
				 return response.json();
			 })
			 .then(function (data) {
				 console.log('Request succeeded with JSON response', data);
			 })
			 .catch(function (error) {
				 console.log('Request failed', error);
			 });
	 }


 }
 customElements.define('idea-widget', IdeaWidget);


 // vote function
 function doVote(what) {

	 // TODO: ik denk eigenlijk dat je een stem moet kunnen cancellen, zo werkt het nu tenminste

	 var xmlhttp = new XMLHttpRequest();

   xmlhttp.onreadystatechange = function() {
		 if (xmlhttp.readyState == XMLHttpRequest.DONE) {
			 if (xmlhttp.status == 200) {
				 let result = xmlhttp.responseText;
				 try {
					 result = JSON.parse(result);
				 } catch(err) {
					 result = '';
				 }
				 if (result.voteRemoved) {
					 document.getElementById('idea-votes-for-button').className = document.getElementById('idea-votes-against-button').className.replace(/ ?selected/g, '');
					 document.getElementById('idea-votes-against-button').className = document.getElementById('idea-votes-against-button').className.replace(/ ?selected/g, '');
				 } else {
					 if (what == 'yes') {
						 if ( document.getElementById('idea-votes-for-button').className.search(/selected/) == -1) {
							 document.getElementById('idea-votes-for-button').className = document.getElementById('idea-votes-for-button').className + ' selected';
						 }
						 document.getElementById('idea-votes-against-button').className = document.getElementById('idea-votes-against-button').className.replace(/ ?selected/g, '');
					 } else {
						 document.getElementById('idea-votes-for-button').className = document.getElementById('idea-votes-for-button').className.replace(/ ?selected/g, '');
						 if ( document.getElementById('idea-votes-against-button').className.search(/selected/) == -1) {
							 document.getElementById('idea-votes-against-button').className = document.getElementById('idea-votes-against-button').className + ' selected';
						 }
					 }
				 }
			 } else {
				 // todo
				 alert('error');
			 }
		 }
   };

   xmlhttp.open("POST", '{{ voteUrl }}', true);
	 xmlhttp.setRequestHeader('Content-type', 'application/json');
	 xmlhttp.setRequestHeader('Accept', 'application/json');
   xmlhttp.send(JSON.stringify({
		 "opinion": what,
		 "_csrf": "{{ csrfToken }}"
	 }));

 }

</script>
