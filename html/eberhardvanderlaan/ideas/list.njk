{% extends 'ideas.njk' %}
{% import 'includes/numberplatebutton.njk' as numberPlateButton %}
{% import 'includes/howdoesitwork.njk' as howdoesitwork %}
{% import 'includes/mapwithbaarsjesoverlay.njk' as mapwithbaarsjesoverlay %}

{% set pageTitle    = 'Plannen' %}
{% set contentClass = 'ideasList' %}

{% block content %}
	<div id="mapcontainer">
		{{mapwithbaarsjesoverlay.map(runningIdeas)}}
		<a href="/plan/nieuw" class="page-button page-button-blue page-button-flag">
			Stuur locatie in
		</a>
		{{numberPlateButton.numberPlateButton('no-of-locations', 'locaties', runningIdeas.length, '/plannen')}}
	</div>
{% endblock %}

{% block howDoesItWork %}
	{{howdoesitwork.howblock('closed')}}
{% endblock %}

{% block endDateBar %}
	<div id="end-date-bar">
		<span id="end-date-bar-start-text" class="text"></span>
		<span id="number-plates">
			<span id="end-date-number-plate-00" class="number-plate"> 0 </span><span id="end-date-number-plate-0" class="number-plate"> 0 </span>
		</span>
		<span id="end-date-bar-end-text" class="text"></span>
	</div>
	<script>
	 if ( daysLeft > 0 ) {
		 document.getElementById('end-date-bar-start-text').innerHTML = 'Locatie insturen en stemmen kan tot ' + endDateText + ': ';
		 document.getElementById('end-date-bar-end-text').innerHTML = 'dagen';
		 var value000 = parseInt(daysLeft/100) || 0;
		 var value00  = parseInt(daysLeft/10) - value000;
		 var value0   = daysLeft - value000 * 100 - value00 * 10;
		 document.getElementById('end-date-number-plate-00').innerHTML = value00;
		 document.getElementById('end-date-number-plate-0').innerHTML = value0;
	 } else {
		 document.getElementById('end-date-bar-start-text').innerHTML = 'Locatie insturen en stemmen kon tot ' + endDateText;
		 document.getElementById('number-plates').style.display = 'none';
	 }
	</script>
{% endblock %}


{% block content2 %}
	<div id="ideas" class="primary">
		<h1>
			Locatie in de Baarsjes
			<select>
				<option {{'selected' if not sort or sort == 'date_desc'}} value="date_desc">Nieuwste eerst</option>
				<option {{'selected' if sort == 'date_asc'}} value="date_asc">Oudste eerst</option>
				<option {{'selected' if sort == 'ranking'}} value="ranking">Ranglijst</option>
			</select>
		</h1>
		
		{# Weird formatting because of `display: inline-block` #}
		{% for idea in runningIdeas
		%}<div class="tile {{idea.status}} {{'USER' if user.id == idea.userId}}" data-poster-url="{{idea.posterImageUrl}}">
			<a href="/plan/{{idea.id}}">
				{% if idea.status != 'DENIED' %}
					<div class="ranking"><div class="label">{{idea.ranking}}</div></div>
				{% endif %}
				
				<div class="image"></div>

				{% if idea.status == 'DENIED' %}
					<div class="duration">
						Dit voorstel is afgewezen
					</div>
				{% endif %}

				<div class="info">
					<h3>{{idea.title}}</h3>
					<p>{{idea.summary}}</p>
					
					<div class="ideaStats">
						<div class="count yes">{{idea.yes}}</div>
						<div class="count no">{{idea.no}}</div>
						<div class="count arguments">{{idea.argCount}}</div>
					</div>
				</div>
			</a>
		</div>{%
					else %}
		<i>Wees de eerste met een goed plan voor jouw buurt!</i>
		{% endfor %}
		
		{# {% if can('ideas:archive') %}
		<a href="/plannen/archief" id="viewArchive">Bekijk het archief</a>
		{% endif %} #}
	</div>
	
{% endblock %}

{% block scripts %}
	<script>
	 // Sorting dropdown
	 // ----------------
	 (function() {
		 var select = document.querySelector('#content2 > .primary > h1 select');
		 select.addEventListener('change', function() {
			 // Replace current `sort=x` with new choice.
				 var pathName = location.pathname;
			 var search   = location.search.replace(/sort=[a-z_]+/i, '') || '?';
			 location.href = pathName + search + 'sort=' + select.value + '#ideas';
		 });
	 })();
	</script>
	<script>
	 // Progressive thumbnail loading
	 // -----------------------------
	 (function() {
		 var tiles = $('#content2 > .primary > .tile:not([data-poster-url=""])');
		 
		 loadTileImages();
		 window.addEventListener('scroll', loadTileImages);
		 window.addEventListener('resize', loadTileImages);
		 
		 // Checks the current scroll position, and loads all tile image that are in
		 // the range 'top of the page' to '50% viewport height below the current viewport'.
			 function loadTileImages() {
				 // Throttle checking to once every 100 ms.
					 var now = +new Date;
				 if( now - this.last < 100 ) return;
				 this.last = now;
				 
				 var viewHeight = window.innerHeight;
				 var scrollTop  = 'pageYOffset' in window            ? window.pageYOffset :
													document.documentElement.scrollTop ? document.documentElement.scrollTop :
			                    document.body.scrollTop;
				 var tile;
				 for( var i = 0; tile = tiles[i]; i++ ) {
					 // Load in all tile that are in view, or are 50% of the view height
					 // below the fold.
						 var tileTop       = offsetTop(tile);
					 var isOrWasInView = tileTop < (scrollTop + viewHeight * 1.5);
					 if( isOrWasInView ) {
						 // Load actual image...
							 var img = tile.querySelector('div.image');
						 img.style.backgroundImage = 'url(\''+tile.getAttribute('data-poster-url')+'\')';
						 // ... and remove tile from the checklist.
							 tile.removeAttribute('data-poster-url');
						 tiles.splice(i, 1);
						 i--;
					 }
				 }
			 }
		 
		 // Element's vertical position, measured from the top of the page.
			 function offsetTop( el, top ) {
				 top = (top || 0) + el.offsetTop;
				 return el.offsetParent != document.body ?
								offsetTop(el.offsetParent, top) :
								top;
			 }
	 })();
	</script>
{% endblock %}
